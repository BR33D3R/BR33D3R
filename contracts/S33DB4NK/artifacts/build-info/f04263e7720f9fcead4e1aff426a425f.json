{
	"id": "f04263e7720f9fcead4e1aff426a425f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\n\n\ninterface IExchange {\n    function initialize(uint256 sproutId) external;\n}\ncontract S33DxCH4NG3Factory {\n    address private _exchangeImplementation;\n    mapping(uint256 => address) public getExchange;\n\n    event ExchangeCreated(address indexed exchangeAddress, uint256 indexed sproutId);\n\n    constructor(address exchangeImplementation) {\n        _exchangeImplementation = exchangeImplementation;\n    }\n\n    function createExchange(uint256 sproutId) external {\n        require(getExchange[sproutId] == address(0), \"Exchange exists\");\n        address exchangeAddress = Clones.clone(_exchangeImplementation);\n        IExchange(exchangeAddress).initialize(sproutId);\n        getExchange[sproutId] = exchangeAddress;\n        emit ExchangeCreated(exchangeAddress, sproutId);\n    }\n}\n\n"
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n *\n * _Available since v3.4._\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(0, 0x09, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(0, 0x09, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := keccak256(add(ptr, 0x43), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 20400
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/Clones.sol\":755:4030  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":755:4030  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205e6dbf52a530deab881ec3efeb2931ec7a03dbdac41226d64ce8ff673cfde0f664736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e6dbf52a530deab881ec3efeb2931ec7a03dbdac41226d64ce8ff673cfde0f664736f6c63430008150033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E PUSH14 0xBF52A530DEAB881EC3EFEB2931EC PUSH27 0x3DBDAC41226D64CE8FF673CFDE0F664736F6C6343000815003300 ",
							"sourceMap": "755:3275:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;755:3275:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e6dbf52a530deab881ec3efeb2931ec7a03dbdac41226d64ce8ff673cfde0f664736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E PUSH14 0xBF52A530DEAB881EC3EFEB2931EC PUSH27 0x3DBDAC41226D64CE8FF673CFDE0F664736F6C6343000815003300 ",
							"sourceMap": "755:3275:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"clone(address)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205e6dbf52a530deab881ec3efeb2931ec7a03dbdac41226d64ce8ff673cfde0f664736f6c63430008150033",
									".code": [
										{
											"begin": 755,
											"end": 4030,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol": {
				"IExchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "sproutId",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"initialize(uint256)": "fe4b84df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sproutId\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":\"IExchange\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]},\"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":{\"keccak256\":\"0xeccc683a38d4fdc7c79ac30136e9b2012fcfb52a88af1b1121e89fd8ac3c39c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bd5c0fd1a70853f07e2c5cda3f628b638c5e14c2f360b247b35a3f4ac53a4ec\",\"dweb:/ipfs/QmPT9jptesMc8eG6J1u6gbTUemTH5R1t5Tn9VgMorsmodH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"S33DxCH4NG3Factory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "exchangeImplementation",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "exchangeAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "sproutId",
									"type": "uint256"
								}
							],
							"name": "ExchangeCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "sproutId",
									"type": "uint256"
								}
							],
							"name": "createExchange",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "getExchange",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":187:890  contract S33DxCH4NG3Factory {... */\n  mstore(0x40, 0x80)\n    /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":406:515  constructor(address exchangeImplementation) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":460:483  _exchangeImplementation */\n  0x00\n    /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":460:508  _exchangeImplementation = exchangeImplementation */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":187:890  contract S33DxCH4NG3Factory {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_9:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_10:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":187:890  contract S33DxCH4NG3Factory {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":187:890  contract S33DxCH4NG3Factory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0b9d5847\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb1f6ca75\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":266:312  mapping(uint256 => address) public getExchange */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":375:417   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":363:418   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":345:419   */\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":266:312  mapping(uint256 => address) public getExchange */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":521:888  function createExchange(uint256 sproutId) external {... */\n    tag_4:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      stop\n    tag_13:\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":623:624  0 */\n      0x00\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":590:611  getExchange[sproutId] */\n      dup2\n      dup2\n      mstore\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":590:601  getExchange */\n      0x01\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":590:611  getExchange[sproutId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":590:625  getExchange[sproutId] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":590:611  getExchange[sproutId] */\n      and\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":590:625  getExchange[sproutId] == address(0) */\n      iszero\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":582:645  require(getExchange[sproutId] == address(0), \"Exchange exists\") */\n      tag_15\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":632:634   */\n      0x20\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":582:645  require(getExchange[sproutId] == address(0), \"Exchange exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":614:635   */\n      mstore\n        /* \"#utility.yul\":671:673   */\n      0x0f\n        /* \"#utility.yul\":651:669   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":644:674   */\n      mstore\n        /* \"#utility.yul\":710:727   */\n      0x45786368616e6765206578697374730000000000000000000000000000000000\n        /* \"#utility.yul\":690:708   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":683:728   */\n      mstore\n        /* \"#utility.yul\":745:763   */\n      0x64\n      add\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":582:645  require(getExchange[sproutId] == address(0), \"Exchange exists\") */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_15:\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":655:678  address exchangeAddress */\n      0x00\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":694:717  _exchangeImplementation */\n      dup1\n      sload\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":681:718  Clones.clone(_exchangeImplementation) */\n      tag_18\n      swap1\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":694:717  _exchangeImplementation */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":681:693  Clones.clone */\n      tag_19\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":681:718  Clones.clone(_exchangeImplementation) */\n      jump\t// in\n    tag_18:\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":728:775  IExchange(exchangeAddress).initialize(sproutId) */\n      mload(0x40)\n      0xfe4b84df00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":920:945   */\n      dup5\n      swap1\n      mstore\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":655:718  address exchangeAddress = Clones.clone(_exchangeImplementation) */\n      swap1\n      swap2\n      pop\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":728:765  IExchange(exchangeAddress).initialize */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      swap1\n      0xfe4b84df\n      swap1\n        /* \"#utility.yul\":893:911   */\n      0x24\n      add\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":728:775  IExchange(exchangeAddress).initialize(sproutId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n      pop\n      pop\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":785:806  getExchange[sproutId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":785:796  getExchange */\n      0x01\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":785:806  getExchange[sproutId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":785:824  getExchange[sproutId] = exchangeAddress */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":839:881  ExchangeCreated(exchangeAddress, sproutId) */\n      swap1\n      mload\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":785:806  getExchange[sproutId] */\n      dup6\n      swap4\n      pop\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":785:824  getExchange[sproutId] = exchangeAddress */\n      swap1\n      swap2\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":839:881  ExchangeCreated(exchangeAddress, sproutId) */\n      0xe80b559cc46e6c0e51671c54b80c5558a517894ed00e34777fddfcfaf99a21b1\n      swap2\n      log3\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":572:888  {... */\n      pop\n        /* \"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":521:888  function createExchange(uint256 sproutId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":973:1732  function clone(address implementation) internal returns (address instance) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1030:1046  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1362:1410  0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000 */\n      0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1344:1358  implementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1338:1342  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1334:1359  shl(0x60, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1328:1332  0xe8 */\n      0xe8\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1324:1360  shr(0xe8, shl(0x60, implementation)) */\n      shr\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1321:1411  or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1315:1319  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1308:1412  mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1569:1601  0x5af43d82803e903d91602b57fd5bf3 */\n      0x5af43d82803e903d91602b57fd5bf3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1552:1566  implementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1546:1550  0x78 */\n      0x78\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1542:1567  shl(0x78, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1539:1602  or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1533:1537  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1526:1603  mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1644:1648  0x37 */\n      0x37\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1638:1642  0x09 */\n      0x09\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1635:1636  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1628:1649  create(0, 0x09, 0x37) */\n      create\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1616:1649  instance := create(0, 0x09, 0x37) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1676:1698  instance != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1668:1725  require(instance != address(0), \"ERC1167: create failed\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":1158:1160   */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1668:1725  require(instance != address(0), \"ERC1167: create failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1140:1161   */\n      mstore\n        /* \"#utility.yul\":1197:1199   */\n      0x16\n        /* \"#utility.yul\":1177:1195   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1170:1200   */\n      mstore\n        /* \"#utility.yul\":1236:1260   */\n      0x455243313136373a20637265617465206661696c656400000000000000000000\n        /* \"#utility.yul\":1216:1234   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1209:1261   */\n      mstore\n        /* \"#utility.yul\":1278:1296   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1668:1725  require(instance != address(0), \"ERC1167: create failed\") */\n      tag_16\n        /* \"#utility.yul\":956:1302   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1668:1725  require(instance != address(0), \"ERC1167: create failed\") */\n    tag_26:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":973:1732  function clone(address implementation) internal returns (address instance) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_7:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_31\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_31:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202352b6e27be10bc63d23b51a610574708f7bd48d1b9b1789fb595b53375059c164736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_110": {
									"entryPoint": null,
									"id": 110,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 84,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:306:2",
										"nodeType": "YulBlock",
										"src": "0:306:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:2",
													"nodeType": "YulBlock",
													"src": "95:209:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:2",
																"nodeType": "YulBlock",
																"src": "141:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:2",
																					"nodeType": "YulLiteral",
																					"src": "150:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:2",
																					"nodeType": "YulLiteral",
																					"src": "153:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:2"
																			},
																			"nativeSrc": "143:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:2"
																		},
																		"nativeSrc": "143:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:2"
																		},
																		"nativeSrc": "112:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:2",
																		"nodeType": "YulLiteral",
																		"src": "137:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:2"
																},
																"nativeSrc": "108:32:2",
																"nodeType": "YulFunctionCall",
																"src": "108:32:2"
															},
															"nativeSrc": "105:52:2",
															"nodeType": "YulIf",
															"src": "105:52:2"
														},
														{
															"nativeSrc": "166:29:2",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:2"
																},
																"nativeSrc": "179:16:2",
																"nodeType": "YulFunctionCall",
																"src": "179:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:2",
																	"nodeType": "YulTypedName",
																	"src": "170:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:2",
																"nodeType": "YulBlock",
																"src": "258:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:2",
																					"nodeType": "YulLiteral",
																					"src": "267:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:2",
																					"nodeType": "YulLiteral",
																					"src": "270:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:2"
																			},
																			"nativeSrc": "260:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:2"
																		},
																		"nativeSrc": "260:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:2",
																										"nodeType": "YulLiteral",
																										"src": "243:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:2",
																										"nodeType": "YulLiteral",
																										"src": "248:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:2",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:2"
																								},
																								"nativeSrc": "239:11:2",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:2"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:2",
																								"nodeType": "YulLiteral",
																								"src": "252:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:2"
																						},
																						"nativeSrc": "235:19:2",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:2"
																				},
																				"nativeSrc": "224:31:2",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:2"
																		},
																		"nativeSrc": "214:42:2",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:2"
																},
																"nativeSrc": "207:50:2",
																"nodeType": "YulFunctionCall",
																"src": "207:50:2"
															},
															"nativeSrc": "204:70:2",
															"nodeType": "YulIf",
															"src": "204:70:2"
														},
														{
															"nativeSrc": "283:15:2",
															"nodeType": "YulAssignment",
															"src": "283:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:2",
																"nodeType": "YulIdentifier",
																"src": "293:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:2",
														"nodeType": "YulTypedName",
														"src": "61:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:2",
														"nodeType": "YulTypedName",
														"src": "72:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:2",
														"nodeType": "YulTypedName",
														"src": "84:6:2",
														"type": ""
													}
												],
												"src": "14:290:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161040d38038061040d83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61037a806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630b9d58471461003b578063b1f6ca751461009a575b600080fd5b61007161004936600461032b565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100ad6100a836600461032b565b6100af565b005b60008181526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610140576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f45786368616e676520657869737473000000000000000000000000000000000060448201526064015b60405180910390fd5b600080546101639073ffffffffffffffffffffffffffffffffffffffff16610263565b6040517ffe4b84df0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063fe4b84df90602401600060405180830381600087803b1580156101ce57600080fd5b505af11580156101e2573d6000803e3d6000fd5b50505060008381526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8616908117909155905185935090917fe80b559cc46e6c0e51671c54b80c5558a517894ed00e34777fddfcfaf99a21b191a35050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f0905073ffffffffffffffffffffffffffffffffffffffff8116610326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f455243313136373a20637265617465206661696c6564000000000000000000006044820152606401610137565b919050565b60006020828403121561033d57600080fd5b503591905056fea26469706673582212202352b6e27be10bc63d23b51a610574708f7bd48d1b9b1789fb595b53375059c164736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x40D CODESIZE SUB DUP1 PUSH2 0x40D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x84 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x37A DUP1 PUSH2 0x93 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9D5847 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB1F6CA75 EQ PUSH2 0x9A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71 PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAD PUSH2 0xA8 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B JUMP JUMPDEST PUSH2 0xAF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x140 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786368616E6765206578697374730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x163 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x263 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFE4B84DF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH4 0xFE4B84DF SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP6 SWAP4 POP SWAP1 SWAP2 PUSH32 0xE80B559CC46E6C0E51671C54B80C5558A517894ED00E34777FDDFCFAF99A21B1 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP3 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP3 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A20637265617465206661696C656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x137 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 MSTORE 0xB6 0xE2 PUSH28 0xE10BC63D23B51A610574708F7BD48D1B9B1789FB595B53375059C164 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "187:703:1:-:0;;;406:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;460:23;:48;;-1:-1:-1;;;;;;460:48:1;-1:-1:-1;;;;;460:48:1;;;;;;;;;;187:703;;14:290:2;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:2;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:2:o;:::-;187:703:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@clone_22": {
									"entryPoint": 611,
									"id": 22,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@createExchange_153": {
									"entryPoint": 175,
									"id": 153,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getExchange_94": {
									"entryPoint": null,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5aae2eb556fc4d0e5a0604abbb718970cc104b699ff11bf90dffcee05de0dc04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1304:2",
										"nodeType": "YulBlock",
										"src": "0:1304:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:2",
													"nodeType": "YulBlock",
													"src": "84:110:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:2",
																"nodeType": "YulBlock",
																"src": "130:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:2",
																					"nodeType": "YulLiteral",
																					"src": "139:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:2",
																					"nodeType": "YulLiteral",
																					"src": "142:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:2"
																			},
																			"nativeSrc": "132:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:2"
																		},
																		"nativeSrc": "132:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:2"
																		},
																		"nativeSrc": "101:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:2",
																		"nodeType": "YulLiteral",
																		"src": "126:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:2"
																},
																"nativeSrc": "97:32:2",
																"nodeType": "YulFunctionCall",
																"src": "97:32:2"
															},
															"nativeSrc": "94:52:2",
															"nodeType": "YulIf",
															"src": "94:52:2"
														},
														{
															"nativeSrc": "155:33:2",
															"nodeType": "YulAssignment",
															"src": "155:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:2"
																},
																"nativeSrc": "165:23:2",
																"nodeType": "YulFunctionCall",
																"src": "165:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:2",
														"nodeType": "YulTypedName",
														"src": "50:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:2",
														"nodeType": "YulTypedName",
														"src": "61:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:2",
														"nodeType": "YulTypedName",
														"src": "73:6:2",
														"type": ""
													}
												],
												"src": "14:180:2"
											},
											{
												"body": {
													"nativeSrc": "300:125:2",
													"nodeType": "YulBlock",
													"src": "300:125:2",
													"statements": [
														{
															"nativeSrc": "310:26:2",
															"nodeType": "YulAssignment",
															"src": "310:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "322:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "333:2:2",
																		"nodeType": "YulLiteral",
																		"src": "333:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "318:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:2"
																},
																"nativeSrc": "318:18:2",
																"nodeType": "YulFunctionCall",
																"src": "318:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "310:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "352:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "367:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "367:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "375:42:2",
																				"nodeType": "YulLiteral",
																				"src": "375:42:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "363:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "363:3:2"
																		},
																		"nativeSrc": "363:55:2",
																		"nodeType": "YulFunctionCall",
																		"src": "363:55:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "345:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:2"
																},
																"nativeSrc": "345:74:2",
																"nodeType": "YulFunctionCall",
																"src": "345:74:2"
															},
															"nativeSrc": "345:74:2",
															"nodeType": "YulExpressionStatement",
															"src": "345:74:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "199:226:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "269:9:2",
														"nodeType": "YulTypedName",
														"src": "269:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "280:6:2",
														"nodeType": "YulTypedName",
														"src": "280:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "291:4:2",
														"nodeType": "YulTypedName",
														"src": "291:4:2",
														"type": ""
													}
												],
												"src": "199:226:2"
											},
											{
												"body": {
													"nativeSrc": "604:165:2",
													"nodeType": "YulBlock",
													"src": "604:165:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "621:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "621:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:2:2",
																		"nodeType": "YulLiteral",
																		"src": "632:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "614:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "614:6:2"
																},
																"nativeSrc": "614:21:2",
																"nodeType": "YulFunctionCall",
																"src": "614:21:2"
															},
															"nativeSrc": "614:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "614:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "655:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "655:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "666:2:2",
																				"nodeType": "YulLiteral",
																				"src": "666:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "651:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "651:3:2"
																		},
																		"nativeSrc": "651:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "651:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "671:2:2",
																		"nodeType": "YulLiteral",
																		"src": "671:2:2",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "644:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "644:6:2"
																},
																"nativeSrc": "644:30:2",
																"nodeType": "YulFunctionCall",
																"src": "644:30:2"
															},
															"nativeSrc": "644:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "644:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "694:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "694:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "705:2:2",
																				"nodeType": "YulLiteral",
																				"src": "705:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "690:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "690:3:2"
																		},
																		"nativeSrc": "690:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "690:18:2"
																	},
																	{
																		"hexValue": "45786368616e676520657869737473",
																		"kind": "string",
																		"nativeSrc": "710:17:2",
																		"nodeType": "YulLiteral",
																		"src": "710:17:2",
																		"type": "",
																		"value": "Exchange exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "683:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "683:6:2"
																},
																"nativeSrc": "683:45:2",
																"nodeType": "YulFunctionCall",
																"src": "683:45:2"
															},
															"nativeSrc": "683:45:2",
															"nodeType": "YulExpressionStatement",
															"src": "683:45:2"
														},
														{
															"nativeSrc": "737:26:2",
															"nodeType": "YulAssignment",
															"src": "737:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "749:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "749:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "760:2:2",
																		"nodeType": "YulLiteral",
																		"src": "760:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "745:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "745:3:2"
																},
																"nativeSrc": "745:18:2",
																"nodeType": "YulFunctionCall",
																"src": "745:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "737:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "737:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5aae2eb556fc4d0e5a0604abbb718970cc104b699ff11bf90dffcee05de0dc04__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "430:339:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "581:9:2",
														"nodeType": "YulTypedName",
														"src": "581:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "595:4:2",
														"nodeType": "YulTypedName",
														"src": "595:4:2",
														"type": ""
													}
												],
												"src": "430:339:2"
											},
											{
												"body": {
													"nativeSrc": "875:76:2",
													"nodeType": "YulBlock",
													"src": "875:76:2",
													"statements": [
														{
															"nativeSrc": "885:26:2",
															"nodeType": "YulAssignment",
															"src": "885:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "897:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "897:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "908:2:2",
																		"nodeType": "YulLiteral",
																		"src": "908:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "893:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "893:3:2"
																},
																"nativeSrc": "893:18:2",
																"nodeType": "YulFunctionCall",
																"src": "893:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "885:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "885:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "927:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "927:9:2"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "938:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "938:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "920:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "920:6:2"
																},
																"nativeSrc": "920:25:2",
																"nodeType": "YulFunctionCall",
																"src": "920:25:2"
															},
															"nativeSrc": "920:25:2",
															"nodeType": "YulExpressionStatement",
															"src": "920:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "774:177:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "844:9:2",
														"nodeType": "YulTypedName",
														"src": "844:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "855:6:2",
														"nodeType": "YulTypedName",
														"src": "855:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "866:4:2",
														"nodeType": "YulTypedName",
														"src": "866:4:2",
														"type": ""
													}
												],
												"src": "774:177:2"
											},
											{
												"body": {
													"nativeSrc": "1130:172:2",
													"nodeType": "YulBlock",
													"src": "1130:172:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1147:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1147:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1158:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1158:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1140:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1140:6:2"
																},
																"nativeSrc": "1140:21:2",
																"nodeType": "YulFunctionCall",
																"src": "1140:21:2"
															},
															"nativeSrc": "1140:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "1140:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1181:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1181:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1192:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1192:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1177:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1177:3:2"
																		},
																		"nativeSrc": "1177:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1177:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1197:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1197:2:2",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1170:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1170:6:2"
																},
																"nativeSrc": "1170:30:2",
																"nodeType": "YulFunctionCall",
																"src": "1170:30:2"
															},
															"nativeSrc": "1170:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "1170:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1220:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1220:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1231:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1231:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1216:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1216:3:2"
																		},
																		"nativeSrc": "1216:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1216:18:2"
																	},
																	{
																		"hexValue": "455243313136373a20637265617465206661696c6564",
																		"kind": "string",
																		"nativeSrc": "1236:24:2",
																		"nodeType": "YulLiteral",
																		"src": "1236:24:2",
																		"type": "",
																		"value": "ERC1167: create failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1209:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1209:6:2"
																},
																"nativeSrc": "1209:52:2",
																"nodeType": "YulFunctionCall",
																"src": "1209:52:2"
															},
															"nativeSrc": "1209:52:2",
															"nodeType": "YulExpressionStatement",
															"src": "1209:52:2"
														},
														{
															"nativeSrc": "1270:26:2",
															"nodeType": "YulAssignment",
															"src": "1270:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1282:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1282:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1293:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1293:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1278:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1278:3:2"
																},
																"nativeSrc": "1278:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1278:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1270:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1270:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "956:346:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1107:9:2",
														"nodeType": "YulTypedName",
														"src": "1107:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1121:4:2",
														"nodeType": "YulTypedName",
														"src": "1121:4:2",
														"type": ""
													}
												],
												"src": "956:346:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_5aae2eb556fc4d0e5a0604abbb718970cc104b699ff11bf90dffcee05de0dc04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Exchange exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"ERC1167: create failed\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80630b9d58471461003b578063b1f6ca751461009a575b600080fd5b61007161004936600461032b565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100ad6100a836600461032b565b6100af565b005b60008181526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610140576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f45786368616e676520657869737473000000000000000000000000000000000060448201526064015b60405180910390fd5b600080546101639073ffffffffffffffffffffffffffffffffffffffff16610263565b6040517ffe4b84df0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063fe4b84df90602401600060405180830381600087803b1580156101ce57600080fd5b505af11580156101e2573d6000803e3d6000fd5b50505060008381526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8616908117909155905185935090917fe80b559cc46e6c0e51671c54b80c5558a517894ed00e34777fddfcfaf99a21b191a35050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f0905073ffffffffffffffffffffffffffffffffffffffff8116610326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f455243313136373a20637265617465206661696c6564000000000000000000006044820152606401610137565b919050565b60006020828403121561033d57600080fd5b503591905056fea26469706673582212202352b6e27be10bc63d23b51a610574708f7bd48d1b9b1789fb595b53375059c164736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9D5847 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB1F6CA75 EQ PUSH2 0x9A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71 PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAD PUSH2 0xA8 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B JUMP JUMPDEST PUSH2 0xAF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x140 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786368616E6765206578697374730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x163 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x263 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFE4B84DF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH4 0xFE4B84DF SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP6 SWAP4 POP SWAP1 SWAP2 PUSH32 0xE80B559CC46E6C0E51671C54B80C5558A517894ED00E34777FDDFCFAF99A21B1 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP3 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP3 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A20637265617465206661696C656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x137 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 MSTORE 0xB6 0xE2 PUSH28 0xE10BC63D23B51A610574708F7BD48D1B9B1789FB595B53375059C164 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "187:703:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;266:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;375:42:2;363:55;;;345:74;;333:2;318:18;266:46:1;;;;;;;521:367;;;;;;:::i;:::-;;:::i;:::-;;;623:1;590:21;;;:11;:21;;;;;;:35;:21;:35;582:63;;;;;;;632:2:2;582:63:1;;;614:21:2;671:2;651:18;;;644:30;710:17;690:18;;;683:45;745:18;;582:63:1;;;;;;;;;655:23;694;;681:37;;694:23;;681:12;:37::i;:::-;728:47;;;;;;;;920:25:2;;;655:63:1;;-1:-1:-1;728:37:1;;;;;;893:18:2;;728:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;785:21:1;;;;:11;:21;;;;;;:39;;;;;;;;;;;;;839:42;;785:21;;-1:-1:-1;785:39:1;;839:42;;;572:316;521:367;:::o;973:759:0:-;1030:16;1362:48;1344:14;1338:4;1334:25;1328:4;1324:36;1321:90;1315:4;1308:104;1569:32;1552:14;1546:4;1542:25;1539:63;1533:4;1526:77;1644:4;1638;1635:1;1628:21;1616:33;-1:-1:-1;1676:22:0;;;1668:57;;;;;;;1158:2:2;1668:57:0;;;1140:21:2;1197:2;1177:18;;;1170:30;1236:24;1216:18;;;1209:52;1278:18;;1668:57:0;956:346:2;1668:57:0;973:759;;;:::o;14:180:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:2;;14:180;-1:-1:-1;14:180:2:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "178000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"createExchange(uint256)": "infinite",
								"getExchange(uint256)": "2419"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 890,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 187,
									"end": 890,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 890,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 406,
									"end": 515,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 515,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 406,
									"end": 515,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 406,
									"end": 515,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 406,
									"end": 515,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 406,
									"end": 515,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 406,
									"end": 515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 406,
									"end": 515,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 406,
									"end": 515,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 460,
									"end": 483,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 508,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 460,
									"end": 508,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 460,
									"end": 508,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 460,
									"end": 508,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 460,
									"end": 508,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 460,
									"end": 508,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 460,
									"end": 508,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 460,
									"end": 508,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 460,
									"end": 508,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 460,
									"end": 508,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 460,
									"end": 508,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 460,
									"end": 508,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 460,
									"end": 508,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 187,
									"end": 890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 187,
									"end": 890,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 187,
									"end": 890,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 890,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 890,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 890,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 187,
									"end": 890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 890,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202352b6e27be10bc63d23b51a610574708f7bd48d1b9b1789fb595b53375059c164736f6c63430008150033",
									".code": [
										{
											"begin": 187,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 187,
											"end": 890,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 890,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 187,
											"end": 890,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "B9D5847"
										},
										{
											"begin": 187,
											"end": 890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 187,
											"end": 890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "B1F6CA75"
										},
										{
											"begin": 187,
											"end": 890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 187,
											"end": 890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 266,
											"end": 312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 375,
											"end": 417,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 363,
											"end": 418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 363,
											"end": 418,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 363,
											"end": 418,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 345,
											"end": 419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 345,
											"end": 419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 521,
											"end": 888,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 521,
											"end": 888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 521,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 521,
											"end": 888,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 521,
											"end": 888,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 521,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 521,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 521,
											"end": 888,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 521,
											"end": 888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 521,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 521,
											"end": 888,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 521,
											"end": 888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 888,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 521,
											"end": 888,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 521,
											"end": 888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 623,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 590,
											"end": 611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 590,
											"end": 611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 590,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 590,
											"end": 611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 590,
											"end": 611,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 590,
											"end": 611,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 590,
											"end": 625,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 590,
											"end": 625,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 582,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 582,
											"end": 645,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 582,
											"end": 645,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 645,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 582,
											"end": 645,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 582,
											"end": 645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 582,
											"end": 645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 632,
											"end": 634,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 645,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 582,
											"end": 645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 582,
											"end": 645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 635,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 671,
											"end": 673,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 651,
											"end": 669,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 651,
											"end": 669,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 651,
											"end": 669,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 644,
											"end": 674,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 710,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "45786368616E6765206578697374730000000000000000000000000000000000"
										},
										{
											"begin": 690,
											"end": 708,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 690,
											"end": 708,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 708,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 683,
											"end": 728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 745,
											"end": 763,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 745,
											"end": 763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 582,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 582,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 582,
											"end": 645,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 645,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 582,
											"end": 645,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 582,
											"end": 645,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 582,
											"end": 645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 645,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 582,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 582,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 655,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 717,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 694,
											"end": 717,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 681,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 681,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 694,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 694,
											"end": 717,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 681,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 681,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 681,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 681,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FE4B84DF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 728,
											"end": 775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 728,
											"end": 775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 920,
											"end": 945,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 920,
											"end": 945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 920,
											"end": 945,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 655,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 655,
											"end": 718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 728,
											"end": 765,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 728,
											"end": 765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 728,
											"end": 765,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 728,
											"end": 765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 765,
											"name": "PUSH",
											"source": 1,
											"value": "FE4B84DF"
										},
										{
											"begin": 728,
											"end": 765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 893,
											"end": 911,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 893,
											"end": 911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 775,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 728,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 728,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 728,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 775,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 728,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 728,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 785,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 806,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 785,
											"end": 806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 785,
											"end": 806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 785,
											"end": 796,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 785,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 785,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 785,
											"end": 806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 785,
											"end": 806,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 785,
											"end": 824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 785,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 785,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 785,
											"end": 824,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 785,
											"end": 824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 785,
											"end": 824,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 839,
											"end": 881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 839,
											"end": 881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 785,
											"end": 806,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 785,
											"end": 806,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 839,
											"end": 881,
											"name": "PUSH",
											"source": 1,
											"value": "E80B559CC46E6C0E51671C54B80C5558A517894ED00E34777FDDFCFAF99A21B1"
										},
										{
											"begin": 839,
											"end": 881,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 839,
											"end": 881,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 572,
											"end": 888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 521,
											"end": 888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 521,
											"end": 888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1732,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 973,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1410,
											"name": "PUSH",
											"source": 0,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
										},
										{
											"begin": 1344,
											"end": 1358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1334,
											"end": 1359,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1332,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 1324,
											"end": 1360,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1321,
											"end": 1411,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": 1552,
											"end": 1566,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1550,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1542,
											"end": 1567,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1602,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1644,
											"end": 1648,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1642,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1635,
											"end": 1636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "CREATE",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1676,
											"end": 1698,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1676,
											"end": 1698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1160,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1199,
											"name": "PUSH",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1177,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1177,
											"end": 1195,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1177,
											"end": 1195,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "455243313136373A20637265617465206661696C656400000000000000000000"
										},
										{
											"begin": 1216,
											"end": 1234,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1216,
											"end": 1234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1216,
											"end": 1234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1296,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1278,
											"end": 1296,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 956,
											"end": 1302,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"createExchange(uint256)": "b1f6ca75",
							"getExchange(uint256)": "0b9d5847"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exchangeImplementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exchangeAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sproutId\",\"type\":\"uint256\"}],\"name\":\"ExchangeCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sproutId\",\"type\":\"uint256\"}],\"name\":\"createExchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":\"S33DxCH4NG3Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]},\"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol\":{\"keccak256\":\"0xeccc683a38d4fdc7c79ac30136e9b2012fcfb52a88af1b1121e89fd8ac3c39c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bd5c0fd1a70853f07e2c5cda3f628b638c5e14c2f360b247b35a3f4ac53a4ec\",\"dweb:/ipfs/QmPT9jptesMc8eG6J1u6gbTUemTH5R1t5Tn9VgMorsmodH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 90,
								"contract": "packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol:S33DxCH4NG3Factory",
								"label": "_exchangeImplementation",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 94,
								"contract": "packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol:S33DxCH4NG3Factory",
								"label": "getExchange",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							79
						]
					},
					"id": 80,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "125:629:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"
							},
							"fullyImplemented": true,
							"id": 79,
							"linearizedBaseContracts": [
								79
							],
							"name": "Clones",
							"nameLocation": "763:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "1048:684:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1110:549:0",
													"nodeType": "YulBlock",
													"src": "1110:549:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1315:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1315:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1328:4:0",
																						"nodeType": "YulLiteral",
																						"src": "1328:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1338:4:0",
																								"nodeType": "YulLiteral",
																								"src": "1338:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "1344:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "1344:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1334:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "1334:3:0"
																						},
																						"nativeSrc": "1334:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "1334:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "1324:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "1324:3:0"
																				},
																				"nativeSrc": "1324:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "1324:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1362:48:0",
																				"nodeType": "YulLiteral",
																				"src": "1362:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "1321:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "1321:2:0"
																		},
																		"nativeSrc": "1321:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1321:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1308:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:0"
																},
																"nativeSrc": "1308:104:0",
																"nodeType": "YulFunctionCall",
																"src": "1308:104:0"
															},
															"nativeSrc": "1308:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "1308:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1533:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1533:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1546:4:0",
																						"nodeType": "YulLiteral",
																						"src": "1546:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "1552:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "1552:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1542:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "1542:3:0"
																				},
																				"nativeSrc": "1542:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "1542:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1569:32:0",
																				"nodeType": "YulLiteral",
																				"src": "1569:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "1539:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "1539:2:0"
																		},
																		"nativeSrc": "1539:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1539:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1526:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1526:6:0"
																},
																"nativeSrc": "1526:77:0",
																"nodeType": "YulFunctionCall",
																"src": "1526:77:0"
															},
															"nativeSrc": "1526:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "1526:77:0"
														},
														{
															"nativeSrc": "1616:33:0",
															"nodeType": "YulAssignment",
															"src": "1616:33:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1644:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1644:4:0",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "1628:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:0"
																},
																"nativeSrc": "1628:21:0",
																"nodeType": "YulFunctionCall",
																"src": "1628:21:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "1616:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "1616:8:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1344:14:0",
														"valueSize": 1
													},
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1552:14:0",
														"valueSize": 1
													},
													{
														"declaration": 8,
														"isOffset": false,
														"isSlot": false,
														"src": "1616:8:0",
														"valueSize": 1
													}
												],
												"id": 10,
												"nodeType": "InlineAssembly",
												"src": "1101:558:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 12,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "1676:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 15,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 14,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1688:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 13,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1688:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1688:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1676:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a20637265617465206661696c6564",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1700:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															},
															"value": "ERC1167: create failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															}
														],
														"id": 11,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1668:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1668:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "1668:57:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "776:192:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "982:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "996:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "988:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:24:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1038:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1030:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:18:0"
									},
									"scope": 79,
									"src": "973:759:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2209:692:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2271:556:0",
													"nodeType": "YulBlock",
													"src": "2271:556:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2476:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2476:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2489:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2489:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2499:4:0",
																								"nodeType": "YulLiteral",
																								"src": "2499:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "2505:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "2505:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2495:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "2495:3:0"
																						},
																						"nativeSrc": "2495:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "2495:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "2485:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2485:3:0"
																				},
																				"nativeSrc": "2485:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2485:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2523:48:0",
																				"nodeType": "YulLiteral",
																				"src": "2523:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2482:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2482:2:0"
																		},
																		"nativeSrc": "2482:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2482:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2469:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2469:6:0"
																},
																"nativeSrc": "2469:104:0",
																"nodeType": "YulFunctionCall",
																"src": "2469:104:0"
															},
															"nativeSrc": "2469:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "2469:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2694:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2694:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2707:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2707:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "2713:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "2713:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2703:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2703:3:0"
																				},
																				"nativeSrc": "2703:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2703:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2730:32:0",
																				"nodeType": "YulLiteral",
																				"src": "2730:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2700:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2700:2:0"
																		},
																		"nativeSrc": "2700:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2700:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2687:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2687:6:0"
																},
																"nativeSrc": "2687:77:0",
																"nodeType": "YulFunctionCall",
																"src": "2687:77:0"
															},
															"nativeSrc": "2687:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "2687:77:0"
														},
														{
															"nativeSrc": "2777:40:0",
															"nodeType": "YulAssignment",
															"src": "2777:40:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2797:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2797:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2800:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2800:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2806:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2806:4:0",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "2812:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "2812:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "2789:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "2789:7:0"
																},
																"nativeSrc": "2789:28:0",
																"nodeType": "YulFunctionCall",
																"src": "2789:28:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "2777:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "2777:8:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2505:14:0",
														"valueSize": 1
													},
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2713:14:0",
														"valueSize": 1
													},
													{
														"declaration": 30,
														"isOffset": false,
														"isSlot": false,
														"src": "2777:8:0",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "2812:4:0",
														"valueSize": 1
													}
												],
												"id": 32,
												"nodeType": "InlineAssembly",
												"src": "2262:565:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 34,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "2844:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2864:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2856:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 35,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2856:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2856:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2844:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a2063726561746532206661696c6564",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2868:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															},
															"value": "ERC1167: create2 failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															}
														],
														"id": 33,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2836:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2836:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2836:58:0"
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1738:364:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2116:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2143:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2135:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2167:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2159:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 26,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2134:38:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2199:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2191:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:18:0"
									},
									"scope": 79,
									"src": "2107:794:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "3176:515:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3238:447:0",
													"nodeType": "YulBlock",
													"src": "3238:447:0",
													"statements": [
														{
															"nativeSrc": "3252:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "3252:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3269:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3263:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "3263:5:0"
																},
																"nativeSrc": "3263:11:0",
																"nodeType": "YulFunctionCall",
																"src": "3263:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3256:3:0",
																	"nodeType": "YulTypedName",
																	"src": "3256:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3298:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "3298:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3303:4:0",
																				"nodeType": "YulLiteral",
																				"src": "3303:4:0",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3294:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3294:3:0"
																		},
																		"nativeSrc": "3294:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3294:14:0"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "3310:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "3310:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3287:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3287:6:0"
																},
																"nativeSrc": "3287:32:0",
																"nodeType": "YulFunctionCall",
																"src": "3287:32:0"
															},
															"nativeSrc": "3287:32:0",
															"nodeType": "YulExpressionStatement",
															"src": "3287:32:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3343:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "3343:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3348:4:0",
																				"nodeType": "YulLiteral",
																				"src": "3348:4:0",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3339:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3339:3:0"
																		},
																		"nativeSrc": "3339:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3339:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:34:0",
																		"nodeType": "YulLiteral",
																		"src": "3355:34:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3332:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3332:6:0"
																},
																"nativeSrc": "3332:58:0",
																"nodeType": "YulFunctionCall",
																"src": "3332:58:0"
															},
															"nativeSrc": "3332:58:0",
															"nodeType": "YulExpressionStatement",
															"src": "3332:58:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3414:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "3414:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3419:4:0",
																				"nodeType": "YulLiteral",
																				"src": "3419:4:0",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3410:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3410:3:0"
																		},
																		"nativeSrc": "3410:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3410:14:0"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "3426:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "3426:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3403:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:0"
																},
																"nativeSrc": "3403:38:0",
																"nodeType": "YulFunctionCall",
																"src": "3403:38:0"
															},
															"nativeSrc": "3403:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "3403:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3461:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "3461:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3466:42:0",
																		"nodeType": "YulLiteral",
																		"src": "3466:42:0",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3454:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3454:6:0"
																},
																"nativeSrc": "3454:55:0",
																"nodeType": "YulFunctionCall",
																"src": "3454:55:0"
															},
															"nativeSrc": "3454:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "3454:55:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3533:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "3533:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3538:4:0",
																				"nodeType": "YulLiteral",
																				"src": "3538:4:0",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3529:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:0"
																		},
																		"nativeSrc": "3529:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3529:14:0"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "3545:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "3545:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3522:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3522:6:0"
																},
																"nativeSrc": "3522:28:0",
																"nodeType": "YulFunctionCall",
																"src": "3522:28:0"
															},
															"nativeSrc": "3522:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "3522:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3574:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "3574:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3579:4:0",
																				"nodeType": "YulLiteral",
																				"src": "3579:4:0",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3570:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3570:3:0"
																		},
																		"nativeSrc": "3570:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3570:14:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "3600:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "3600:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3605:4:0",
																						"nodeType": "YulLiteral",
																						"src": "3605:4:0",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3596:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "3596:3:0"
																				},
																				"nativeSrc": "3596:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3596:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3612:4:0",
																				"nodeType": "YulLiteral",
																				"src": "3612:4:0",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3586:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "3586:9:0"
																		},
																		"nativeSrc": "3586:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3586:31:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3563:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3563:6:0"
																},
																"nativeSrc": "3563:55:0",
																"nodeType": "YulFunctionCall",
																"src": "3563:55:0"
															},
															"nativeSrc": "3563:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "3563:55:0"
														},
														{
															"nativeSrc": "3631:44:0",
															"nodeType": "YulAssignment",
															"src": "3631:44:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3658:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "3658:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3663:4:0",
																				"nodeType": "YulLiteral",
																				"src": "3663:4:0",
																				"type": "",
																				"value": "0x43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3654:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3654:3:0"
																		},
																		"nativeSrc": "3654:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3654:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3670:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3670:4:0",
																		"type": "",
																		"value": "0x55"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3644:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "3644:9:0"
																},
																"nativeSrc": "3644:31:0",
																"nodeType": "YulFunctionCall",
																"src": "3644:31:0"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nativeSrc": "3631:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "3631:9:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 51,
														"isOffset": false,
														"isSlot": false,
														"src": "3310:8:0",
														"valueSize": 1
													},
													{
														"declaration": 47,
														"isOffset": false,
														"isSlot": false,
														"src": "3426:14:0",
														"valueSize": 1
													},
													{
														"declaration": 54,
														"isOffset": false,
														"isSlot": false,
														"src": "3631:9:0",
														"valueSize": 1
													},
													{
														"declaration": 49,
														"isOffset": false,
														"isSlot": false,
														"src": "3545:4:0",
														"valueSize": 1
													}
												],
												"id": 56,
												"nodeType": "InlineAssembly",
												"src": "3229:456:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2907:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3020:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3065:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3057:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3097:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3089:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "3119:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3111:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3047:86:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "3165:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3157:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3157:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3156:19:0"
									},
									"scope": 79,
									"src": "3011:680:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "3940:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 69,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "3985:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 70,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "4001:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 73,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4015:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$79",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$79",
																		"typeString": "library Clones"
																	}
																],
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4007:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 71,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4007:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4007:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 68,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58,
															78
														],
														"referencedDeclaration": 58,
														"src": "3957:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3957:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 67,
												"id": 76,
												"nodeType": "Return",
												"src": "3950:71:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3697:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 78,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3810:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3855:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3847:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3887:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3879:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3837:60:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "3929:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3921:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3920:19:0"
									},
									"scope": 79,
									"src": "3801:227:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 80,
							"src": "755:3275:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:3931:0"
				},
				"id": 0
			},
			"packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol": {
				"ast": {
					"absolutePath": "packages/hardhat/contracts/S33DB4NK/S33DxCH4NG3Factory.sol",
					"exportedSymbols": {
						"Clones": [
							79
						],
						"IExchange": [
							88
						],
						"S33DxCH4NG3Factory": [
							154
						]
					},
					"id": 155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 81,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
							"file": "@openzeppelin/contracts/proxy/Clones.sol",
							"id": 82,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 155,
							"sourceUnit": 80,
							"src": "58:50:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IExchange",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IExchange",
							"nameLocation": "121:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "fe4b84df",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "146:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "sproutId",
												"nameLocation": "165:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "157:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "157:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "156:18:1"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "183:0:1"
									},
									"scope": 88,
									"src": "137:47:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 155,
							"src": "111:75:1",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "S33DxCH4NG3Factory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 154,
							"linearizedBaseContracts": [
								154
							],
							"name": "S33DxCH4NG3Factory",
							"nameLocation": "196:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 90,
									"mutability": "mutable",
									"name": "_exchangeImplementation",
									"nameLocation": "237:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "221:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 89,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "221:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "0b9d5847",
									"id": 94,
									"mutability": "mutable",
									"name": "getExchange",
									"nameLocation": "301:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "266:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 93,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 91,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "274:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "266:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 92,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "285:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e80b559cc46e6c0e51671c54b80c5558a517894ed00e34777fddfcfaf99a21b1",
									"id": 100,
									"name": "ExchangeCreated",
									"nameLocation": "325:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "exchangeAddress",
												"nameLocation": "357:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "341:31:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "sproutId",
												"nameLocation": "390:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "374:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "340:59:1"
									},
									"src": "319:81:1"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "450:65:1",
										"statements": [
											{
												"expression": {
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 105,
														"name": "_exchangeImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "460:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 106,
														"name": "exchangeImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "486:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "460:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "460:48:1"
											}
										]
									},
									"id": 110,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "exchangeImplementation",
												"nameLocation": "426:22:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "418:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:32:1"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "450:0:1"
									},
									"scope": 154,
									"src": "406:109:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "572:316:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 116,
																	"name": "getExchange",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "590:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 118,
																"indexExpression": {
																	"id": 117,
																	"name": "sproutId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 112,
																	"src": "602:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "590:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "623:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "615:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 119,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "615:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "615:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "590:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786368616e676520657869737473",
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "627:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5aae2eb556fc4d0e5a0604abbb718970cc104b699ff11bf90dffcee05de0dc04",
																"typeString": "literal_string \"Exchange exists\""
															},
															"value": "Exchange exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5aae2eb556fc4d0e5a0604abbb718970cc104b699ff11bf90dffcee05de0dc04",
																"typeString": "literal_string \"Exchange exists\""
															}
														],
														"id": 115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "582:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "582:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "582:63:1"
											},
											{
												"assignments": [
													128
												],
												"declarations": [
													{
														"constant": false,
														"id": 128,
														"mutability": "mutable",
														"name": "exchangeAddress",
														"nameLocation": "663:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "655:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 127,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "655:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 133,
												"initialValue": {
													"arguments": [
														{
															"id": 131,
															"name": "_exchangeImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "694:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 129,
															"name": "Clones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "681:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Clones_$79_$",
																"typeString": "type(library Clones)"
															}
														},
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "688:5:1",
														"memberName": "clone",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "681:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
															"typeString": "function (address) returns (address)"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "681:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "655:63:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 138,
															"name": "sproutId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "766:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 135,
																	"name": "exchangeAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "738:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 134,
																"name": "IExchange",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "728:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IExchange_$88_$",
																	"typeString": "type(contract IExchange)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "728:26:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IExchange_$88",
																"typeString": "contract IExchange"
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "755:10:1",
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 87,
														"src": "728:37:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "728:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "728:47:1"
											},
											{
												"expression": {
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 141,
															"name": "getExchange",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "785:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 143,
														"indexExpression": {
															"id": 142,
															"name": "sproutId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "797:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "785:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 144,
														"name": "exchangeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "809:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "785:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "785:39:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 148,
															"name": "exchangeAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "855:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 149,
															"name": "sproutId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "872:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 147,
														"name": "ExchangeCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "839:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "EmitStatement",
												"src": "834:47:1"
											}
										]
									},
									"functionSelector": "b1f6ca75",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createExchange",
									"nameLocation": "530:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "sproutId",
												"nameLocation": "553:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "545:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:18:1"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "572:0:1"
									},
									"scope": 154,
									"src": "521:367:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 155,
							"src": "187:703:1",
							"usedErrors": [],
							"usedEvents": [
								100
							]
						}
					],
					"src": "32:860:1"
				},
				"id": 1
			}
		}
	}
}